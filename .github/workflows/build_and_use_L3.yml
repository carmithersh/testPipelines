name: build_and_use_L3_signing

on: [workflow_dispatch, workflow_call]

env:
  DOCKER_REPO: barber-docker-local
  IMAGE_NAME: github-jfrog-signing-teting
  VERSION: 4
  JFROG_CLI_BUILD_PROJECT: barber

permissions:
  actions: read # for detecting the Github Actions environment.
  contents: read
  id-token: write
  attestations: write

jobs:
  hello_world_job:
    runs-on: ubuntu-latest
    name: A job to say hello   
    outputs:          
      # digest: ${{ steps.build.outputs.digest }}      
      digest: "sha256:c3149709b29b94165f1038a68957518a8fa5bb63a040d2631aaec44e210a7eba"
      rt_host: ${{ vars.ARTIFACTORY_URL }}
      # image: ${{ env.DOCKER_REPO }}/${{ env.IMAGE_NAME }}
      image: carmit-prj-1-carmit-docker-local/my-very-cool-image
    steps:
      - name: Checkout the repository    
        uses: actions/checkout@v4
        
      - name: Setup JFrog CLI
        id: setup-cli
        uses: jfrog/setup-jfrog-cli@v4
        env:
          JF_URL: https://${{ vars.ARTIFACTORY_URL }}
          
        with:  
          version: latest
          oidc-provider-name: jfrog-github-oidc

      - name: configure jfrog environment
        run: |
          jf pip-config --repo-resolve=barber-python  
            
      - name: configure environment
        run: |                      
          python3 -m pip install --upgrade pip setuptools wheel sigstore
          wheel -h
          pip show setuptools
          echo $VIRTUAL_ENV
          
      - name: build project
        run: |                               
          jf pip install -r requirements.txt --module=jfrog-python-example
          python setup.py sdist bdist_wheel
          cd dist && echo "hashes=$(sha256sum * | base64 -w0)" >> $GITHUB_OUTPUT

      - name: publish python package
        run: |
          jf rt u dist/ barber-python-local/example-projects/ --module=jfrog-python-example 

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3    
          
      - name: Authenticate Docker
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.ARTIFACTORY_URL }}
          username: ${{ steps.setup-cli.outputs.oidc-user }} 
          password: ${{ steps.setup-cli.outputs.oidc-token }}
          
      - name: Build Docker image    
        uses: docker/build-push-action@v5
        id: build
        with:
          push: true
          platforms: linux/amd64, linux/arm64
          tags: ${{ vars.ARTIFACTORY_URL }}/${{ env.DOCKER_REPO }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}      

      - name: Attest Build Provenance
        uses: actions/attest-build-provenance@v3
        with:
          subject-name: "oci://carmit-prj-1-carmit-docker-local/my-very-cool-image"
          subject-digest: "sha256:c3149709b29b94165f1038a68957518a8fa5bb63a040d2631aaec44e210a7eba"

  call-reusable:
    needs: hello_world_job 
    uses: carmithersh/carmit-testing/.github/workflows/create_L3_attestation.yml@main 
    with:
      subject-name: oci://${{ needs.hello_world_job.outputs.rt_host }}/${{ needs.hello_world_job.outputs.image }}
      subject-digest: ${{ needs.hello_world_job.outputs.digest }}
      oidc-provider: jfrog-github-oidc
      jfrog-platform-host: ${{ needs.hello_world_job.outputs.rt_host }}
        
      
