name: build_and_use_L3_signing
on: [workflow_dispatch, workflow_call]
  
permissions:
  actions: read # for detecting the Github Actions environment.
  contents: read
  id-token: write
  attestations: write
jobs:
  hello_world_job:
    runs-on: ubuntu-latest
    name: A job to say hello
    env:
          DOCKER_REPO: 'carmit-prj-1-carmit-docker-local'
          IMAGE_NAME: 'github-jfrog-signing-teting'
          VERSION: '1'
          JFROG_CLI_BUILD_PROJECT: carmit-prj-1   
    steps:
      - name: Checkout the repository    
        uses: actions/checkout@v4
        
      - name: Install JFrog CLI
        id: setup-cli
        uses: jfrog/setup-jfrog-cli@v4
        env:
          JF_URL: https://${{ vars.ARTIFACTORY_URL }}
          JF_PROJECT: carmit-prj-1
        with:
         oidc-provider-name: jfrog-github-oidc

      - name: configure jfrog environment
        run: |
          jf pip-config --repo-resolve=carmit-prj-1-carmit-python  
            
      - name: configure environment
        run: |                      
          python3 -m pip install --upgrade pip setuptools wheel sigstore
          wheel -h
          pip show setuptools
          echo $VIRTUAL_ENV
          
      - name: build project
        run: |                               
          jf pip install -r requirements.txt --module=jfrog-python-example
          python setup.py sdist bdist_wheel
          cd dist && echo "hashes=$(sha256sum * | base64 -w0)" >> $GITHUB_OUTPUT

      - name: publish python package
        run: |
          jf rt u dist/ carmit-prj-1-carmit-python-local/example-projects/ --module=jfrog-python-example 

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3    
          
      - name: Authenticate Docker
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.ARTIFACTORY_URL }}
          username: ${{ steps.setup-cli.outputs.oidc-user }} 
          password: ${{ steps.setup-cli.outputs.oidc-token }}
          
      - name: Build Docker image    
        uses: docker/build-push-action@v5
        id: build
        with:
          push: true
          platforms: linux/amd64, linux/arm64
          tags: ${{ vars.ARTIFACTORY_URL }}/${{ env.DOCKER_REPO }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}      
          
      - name: Sign Artifact
        uses: carmithersh/testPipelines/.github/workflows/sign-artifact.yml@main 
        with:
          subject-name: ${{ env.DOCKER_REPO }}/${{ env.IMAGE_NAME }}/${{ env.VERSION }}/list.manifest.json
          subject-digest: ${{ steps.build.outputs.digest }}
        
      
